{"version":3,"sources":["../../../../../ultimatec/Dropbox/projects/jammingapp/src/util/Spotify.js","../../../../../ultimatec/Dropbox/projects/jammingapp/src/Components/SearchBar/SearchBar.js","../../../../../ultimatec/Dropbox/projects/jammingapp/src/Components/Track/Track.js","../../../../../ultimatec/Dropbox/projects/jammingapp/src/Components/TrackList/TrackList.js","../../../../../ultimatec/Dropbox/projects/jammingapp/src/Components/SearchResults/SearchResults.js","../../../../../ultimatec/Dropbox/projects/jammingapp/src/Components/Playlist/Playlist.js","../../../../../ultimatec/Dropbox/projects/jammingapp/src/Components/App/App.js","../../../../../ultimatec/Dropbox/projects/jammingapp/src/reportWebVitals.js","../../../../../ultimatec/Dropbox/projects/jammingapp/src/index.js"],"names":["accessToken","accessTokenMatch","expiresInMatch","SearchBar","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","search","bind","assertThisInitialized","handleTermChange","inherits","createClass","key","value","react_default","a","createElement","className","placeholder","onChange","onClick","onSearch","state","term","e","setState","target","React","Component","Track","addTrack","removeTrack","track","name","artist","album","renderAction","isRemoval","onAdd","onRemove","TrackList","apply","arguments","tracks","map","Track_Track_Track","id","SearchResults","TrackList_TrackList_TrackList","searchResults","Playlist","handleNameChange","defaultValue","playlistTracks","onSave","onNameChange","Spotify","getAccessToken","window","location","href","match","expiresIn","Number","setTimeout","history","pushState","accessUrl","concat","fetch","headers","Authorization","then","response","json","jsonResponse","items","artists","uri","savePlaylist","trackUris","length","userId","method","body","JSON","stringify","playlistId","uris","App","playlistName","updatePlaylistName","SearchBar_SearchBar_SearchBar","SearchResults_SearchResults_SearchResults","Playlist_Playlist_Playlist","newList","find","savedTrack","push","filter","currentTrack","_this2","_this3","reportWebVitals","onPerfEntry","Function","__webpack_require__","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.13a9dec4.chunk.js","sourcesContent":["let accessToken, accessTokenMatch, expiresInMatch;\r\n\r\nconst clientID = '04090e56606546dc89838623dc0a3b95';\r\nconst redirectURI = \"http://acceptable-language.surge.sh\";\r\n\r\nconst Spotify = {\r\n    getAccessToken() {\r\n        if(accessToken) {\r\n            return accessToken;\r\n        }\r\n            \r\n        accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\r\n        expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\r\n\r\n        if(accessTokenMatch && expiresInMatch) {\r\n            accessToken = accessTokenMatch[1];\r\n            const expiresIn = Number(expiresInMatch[1]);\r\n\r\n            window.setTimeout(() => accessToken = '', expiresIn * 1000);\r\n            window.history.pushState('Access Token', null, '/');\r\n            return accessToken;\r\n        } else {\r\n            const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectURI}`;\r\n            window.location = accessUrl;\r\n        }\r\n    },\r\n\r\n    search(term) {\r\n        const accessToken = Spotify.getAccessToken();\r\n        return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`\r\n            }\r\n          }).then(response => {\r\n              return response.json();\r\n          }).then(jsonResponse => {\r\n              if (!jsonResponse.tracks) {\r\n                  return [];\r\n              }\r\n              return jsonResponse.tracks.items.map(track => ({\r\n                  id: track.id,\r\n                  name: track.name,\r\n                  artist: track.artists[0].name,\r\n                  album: track.album.name,\r\n                  uri: track.uri\r\n              }));\r\n\r\n          });\r\n    },\r\n\r\n    savePlaylist(name, trackUris) {\r\n        if (!name || !trackUris.length) {\r\n            return;\r\n        }\r\n\r\n        let accessToken = Spotify.getAccessToken();\r\n        let headers = {Authorization: `Bearer ${accessToken}`};\r\n        let userId;\r\n\r\n        return fetch('https://api.spotify.com/v1/me', {headers: headers}\r\n        ).then(response => response.json()\r\n        ).then(jsonResponse => {\r\n            userId = jsonResponse.id;\r\n            return fetch(`https://api.spotify.com/v1/me/v1/users/${userId}/playlists`, {\r\n                headers: headers,\r\n                method: 'POST',\r\n                body: JSON.stringify({ name: name })\r\n            }).then(response => response.json()\r\n            ).then(jsonResponse => {\r\n                const playlistId = jsonResponse.id;\r\n                return fetch(`https://api.spotify.com/v1/me/v1/users/${userId}/playlists/${playlistId}/tracks`, {\r\n                    headers: headers,\r\n                    method: 'POST',\r\n                    body: JSON.stringify({ uris: trackUris })\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport default Spotify;","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nexport class SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.search = this.search.bind(this);\r\n        this.handleTermChange = this.handleTermChange.bind(this);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n                <input placeholder=\"Enter A Song, Album, or Artist\" onChange={this.handleTermChange} />\r\n                <button className=\"SearchButton\" onClick={this.search}>SEARCH</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    search() {\r\n        this.props.onSearch(this.state.term);\r\n    }\r\n\r\n    handleTermChange(e) {\r\n        this.setState({ term: e.target.value });\r\n    }\r\n}","import React from 'react';\n\nimport './Track.css';\n\nexport class Track extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n  }\n  \n  render() {\n    return (\n      <div className=\"Track\">\n        <div className=\"Track-information\">\n          <h3>{this.props.track.name}</h3>\n          <p>{this.props.track.artist} | {this.props.track.album}</p>\n        </div>\n        {this.renderAction()}\n      </div>\n    );\n  }\n\n  renderAction() {\n    if (this.props.isRemoval) {\n      return <button className='Track-action' onClick={this.removeTrack}>-</button>\n    } else {\n      return <button className='Track-action' onClick={this.addTrack}>+</button>\n    }\n  }\n\n  addTrack() {\n    this.props.onAdd(this.props.track);\n  }\n\n  removeTrack() {\n    this.props.onRemove(this.props.track);\n  }\n}\n","import React from 'react';\nimport './TrackList.css';\nimport { Track } from '../Track/Track';\n\nexport class TrackList extends React.Component {\n    render() {\n        return (\n            <div className=\"TrackList\">\n                {\n                    this.props.tracks.map(track => {\n                        return <Track track={track} \n                                        key={track.id} \n                                        onAdd={this.props.onAdd}\n                                        onRemove={this.props.onRemove}\n                                        isRemoval={this.props.isRemoval} />\n                    })\n                }\n            </div>\n        );\n    }\n}","import React from 'react';\r\nimport './SearchResults.css';\r\nimport { TrackList } from '../TrackList/TrackList';\r\n\r\nexport class SearchResults extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"SearchResults\">\r\n                <h2>Results</h2>\r\n                <TrackList tracks={this.props.searchResults} \r\n                           onAdd={this.props.onAdd}\r\n                           onRemove={this.props.onRemove} \r\n                           isRemoval={false} />\r\n            </div>\r\n        );\r\n    }   \r\n}","import React from 'react';\nimport './Playlist.css';\nimport { TrackList } from '../TrackList/TrackList';\n\nexport class Playlist extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n  \n  render() {\n    return (\n      <div className=\"Playlist\">\n        <input onChange={this.handleNameChange}\n               defaultValue={'New Playlist'}/>\n        <TrackList tracks={this.props.playlistTracks}\n                   onRemove={this.props.onRemove} \n                   isRemoval={true} \n                   onChange={this.handleNameChange} />\n        <button className=\"Playlist-save\" onClick={this.props.onSave}>SAVE TO SPOTIFY</button>\n      </div>\n    );\n  }\n\n  handleNameChange(e) {\n    let name = e.target.value; \n    this.props.onNameChange(name);\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { SearchResults } from '../SearchResults/SearchResults';\nimport { Playlist } from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {  \n      searchResults: [],\n      playlistName: 'Meteora',\n      playlistTracks: []\n    };\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n  \n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults searchResults={this.state.searchResults} \n                           onAdd={this.addTrack} />\n            <Playlist playlistName={this.state.playlistName} \n                      playlistTracks={this.state.playlistTracks}\n                      onRemove={this.removeTrack} \n                      onNameChange={this.updatePlaylistName} \n                      onSave={this.savePlaylist} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  addTrack(track){\n    let newList = this.state.playlistTracks;\n    if (this.state.playlistTracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    } \n    newList.push(track);\n    this.setState ({ playlistTracks: newList }); \n      \n    \n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n\n    this.setState({playlistTracks: tracks});\n  }\n\n  updatePlaylistName(name) {\n    this.setState({ playlistName: name });\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n      this.setState({ \n        playlistName: 'New Playlist',\n        playlistTracks: []\n      })\n    }) \n  }\n\n  search(term) {\n    Spotify.search(term).then(searchResults => {\n      this.setState({ searchResults: searchResults })\n    })\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}